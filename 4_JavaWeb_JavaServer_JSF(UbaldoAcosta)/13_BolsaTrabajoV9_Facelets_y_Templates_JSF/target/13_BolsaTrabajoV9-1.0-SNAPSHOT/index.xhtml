<!DOCTYPE html>
<!-- Estas direcciones es para que busque dentro de las dependencias de JavaEE se va buscar las etiquetas definidas 
    dentro de el archivo jar(Dependencias) tambien es para declaras que trabajaremos con JSF -->
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"><!-- Este tag es para hacer las validaciones utilizamos JSF core -->

    <h:head>
        <title>Bolsa de Trabajo</title>
    </h:head>

    <h:body>

        <!-- Aplicaremos la plantilla para ello agregaremos el elemento ui:composition  y 
        con templete=agregamos la direccion de la plantilla -->

        <!-- El formulario debe estar dentro del elemento composition -->
        <ui:composition template="./WEB-INF/plantillas/plantilla.xhtml" >

            <!-- Ahora modificaremos la seccion de contenido, pero el pie de pagina y la cabezera no lo haremos -->

            <!-- Para agregar este contenido a content utilizamos define, pero el contenido debe estar dentro
            de la etiqueta define -->
            <ui:define name="content">

                <!-- Agregamos este id en el formulario para poder recuperar elemento desde la clase Vacante Form -->
                <h:form id="vacanteForm">
                    <h:messages globalOnly="true"></h:messages>
                    <table>
                        <tr>
                            <td><h:outputLabel for="nombre" value="#{msgs['VacanteForm.nombre']}"></h:outputLabel></td>
                            <td><h:inputText id="nombre"  required="true" value="#{candidato.nombre}"></h:inputText></td>
                            <td><h:message for="nombre"></h:message></td>
                        </tr>

                        <tr>
                            <td><h:outputLabel for="apellido" value="#{msgs['VacanteForm.apellido']}"></h:outputLabel></td>
                            <td><h:inputText id="apellido"  required="true" value="#{candidato.apellido}"></h:inputText></td>
                            <td><h:message for="apellido"></h:message></td>
                        </tr>

                        <tr>
                            <td><h:outputLabel for="salarioDeseado" value="#{msgs['VacanteForm.salarioDeseado']}"></h:outputLabel></td>
                            <td>
                                <h:inputText id="salarioDeseado" required="true" value="#{candidato.salarioDeseado}">
                                    <!-- Aqui haremos un validador que el campo con un minimo de 500 y un maximo de 5000 -->
                                    <f:validateLongRange minimum="500" maximum="5000"/>
                                </h:inputText>
                            </td>
                            <td><h:message for="salarioDeseado"></h:message></td>
                        </tr>

                        <tr>
                            <td><h:outputLabel for="fechaNacimiento" value="#{msgs['VacanteForm.fechaNacimiento']}"></h:outputLabel></td>
                            <td>
                                <h:inputText id="fechaNacimiento"  required="true" value="#{candidato.fechaNacimiento}">
                                    <!-- Esta Etiqueta de ConverterDateTime es una configuracion interna
                                    donde se configura el formato de Fecha "Dia/Mes/AÃ±o"-->
                                    <f:convertDateTime pattern="dd/MM/yyyy"></f:convertDateTime>
                                </h:inputText>
                            </td>
                            <td><h:message for="fechaNacimiento"></h:message></td>
                        </tr>

                        <tr>
                            <td><h:outputLabel for="codigoPostal" value="#{msgs['VacanteForm.codigoPostal']}"></h:outputLabel></td>
                            <td>
                                <h:inputText id="codigoPostal" immediate="true" onchange="this.form.submit()"  required="true"
                                             value="#{candidato.codigoPostal}" valueChangeListener="#{vacanteForm.codigoPostalListener}" >
                                    <!--  Con esto lo que hacemos es que los numero sean si o si de tipo numericos y tenga un patron de 5 digitos 00000-->
                                    <f:convertNumber integerOnly="true" pattern="00000"/>
                                </h:inputText>
                            </td>
                            <td><h:message for="codigoPostal"></h:message></td>
                        </tr>

                        <tr>
                            <td><h:outputLabel for="coloniaId" value="#{msgs['vacanteForm.coloniaId']}"></h:outputLabel></td>
                            <td>
                                <h:selectOneMenu id="coloniaId" required="true" value="#{candidato.coloniaId}" >
                                    <f:selectItem itemLabel="#{msgs['vacanteForm.seleccione']}" itemValue="" />
                                    <f:selectItems value="#{coloniaHelper.selectItems}"/>
                                </h:selectOneMenu>
                            </td>
                            <td><h:message for="coloniaId"></h:message></td>
                        </tr>

                        <tr>
                            <td><h:outputLabel for="ciudad" value="#{msgs['VacanteForm.ciudad']}"></h:outputLabel></td>
                            <td>
                                <h:inputText id="ciudad" required="true"
                                             value="#{candidato.ciudad}"></h:inputText>
                            </td>
                            <td><h:message for="ciudad"></h:message></td>
                        </tr>

                    </table>
                    <!-- Aqui agregamos el campo de comentario pero para eso estamos creando otra tabla -->
                    <table>
                        <tr>
                            <td>
                                <!-- Esto es para que se oculte el comentario immediate = para que se procede de inmediato nuestro
                                formulario y utilizaremos rendered = nos permite ocultar o mostrar nuestro elemento-->
                                <h:commandLink actionListener="#{vacanteForm.ocultarComentario}" immediate="true" 
                                               rendered="#{!vacanteForm.comentarioEnviado}" value="#{msgs['vacanteForm.mostrar']}"/>

                                <!-- Ahora haremos este commandLink para ocultar este comentario-->
                                <h:commandLink actionListener="#{vacanteForm.ocultarComentario}" immediate="true" 
                                               rendered="#{vacanteForm.comentarioEnviado}" value="#{msgs['vacanteForm.ocultar']}"/>
                            </td>
                        </tr>
                    </table>
                    <!-- Agregaremos este panel que se encargara de mostrar el campo de comentario que es como un div-->
                    <h:panelGroup rendered="#{vacanteForm.comentarioEnviado}">
                        <table>
                            <tr>
                                <td>
                                    <h:outputLabel for="comentario" value="#{msgs['vacanteForm.comentario']}"/>
                                </td>
                            </tr>
                            <!-- con este elemento mostraremos el inputTextArea -->
                            <tr>
                                <td>
                                    <h:inputTextarea id="comentario" cols="50" rows="10" value="#{candidato.comentario}"/>
                                </td>
                            </tr>
                        </table>
                    </h:panelGroup>
                    <h:commandButton action="#{vacanteForm.enviar}" value="#{msgs['VacanteForm.enviar']}"/>
                </h:form>
            </ui:define>
        </ui:composition>

    </h:body>

</html>

